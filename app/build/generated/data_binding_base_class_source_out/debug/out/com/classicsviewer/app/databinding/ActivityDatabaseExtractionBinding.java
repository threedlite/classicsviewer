// Generated by view binder compiler. Do not edit!
package com.classicsviewer.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.classicsviewer.app.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDatabaseExtractionBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView extractionMessage;

  @NonNull
  public final ProgressBar extractionProgress;

  @NonNull
  public final TextView extractionTitle;

  @NonNull
  public final TextView progressText;

  private ActivityDatabaseExtractionBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView extractionMessage, @NonNull ProgressBar extractionProgress,
      @NonNull TextView extractionTitle, @NonNull TextView progressText) {
    this.rootView = rootView;
    this.extractionMessage = extractionMessage;
    this.extractionProgress = extractionProgress;
    this.extractionTitle = extractionTitle;
    this.progressText = progressText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDatabaseExtractionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDatabaseExtractionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_database_extraction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDatabaseExtractionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.extractionMessage;
      TextView extractionMessage = ViewBindings.findChildViewById(rootView, id);
      if (extractionMessage == null) {
        break missingId;
      }

      id = R.id.extractionProgress;
      ProgressBar extractionProgress = ViewBindings.findChildViewById(rootView, id);
      if (extractionProgress == null) {
        break missingId;
      }

      id = R.id.extractionTitle;
      TextView extractionTitle = ViewBindings.findChildViewById(rootView, id);
      if (extractionTitle == null) {
        break missingId;
      }

      id = R.id.progressText;
      TextView progressText = ViewBindings.findChildViewById(rootView, id);
      if (progressText == null) {
        break missingId;
      }

      return new ActivityDatabaseExtractionBinding((ConstraintLayout) rootView, extractionMessage,
          extractionProgress, extractionTitle, progressText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
